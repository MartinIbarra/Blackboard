{"version":3,"sources":["components/home/Home.js","components/blackboard/Blackboard.js","UserContext.js","components/home/Room.js","components/home/RoomList.js","components/layout/Navbar.js","components/auth/Signup.js","components/auth/Login.js","components/blackboard/ColorPalette.js","App.js","reportWebVitals.js","index.js"],"names":["socket","UserContext","createContext","Room","name","className","RoomList","rooms","map","room","to","_id","Home","ENDPOINT","useContext","user","setUser","useState","setRoom","setRooms","roomError","setRoomError","useEffect","io","emit","off","on","err","onSubmit","e","preventDefault","onChange","target","value","onFocus","required","type","placeholder","Navbar","logout","a","fetch","credentials","res","data","json","console","log","href","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","Signup","setName","email","setEmail","password","setPassword","nameError","setNameError","emailError","setEmailError","passwordError","setPasswordError","submitHandler","method","body","JSON","stringify","headers","errors","htmlFor","Login","ColorPalette","getColor","changeColorEvent","color","Blackboard","borradorRef","useRef","penRef","canvasRef","useParams","room_id","room_name","canv","current","ctx","getContext","width","window","innerWidth","height","innerHeight","dibujando","borrando","pen","borrador","user_id","coordenadas","x","y","oldCoord","obtenerPosicion","rect","getBoundingClientRect","clientX","left","clientY","top","lineWidth","addEventListener","event","beginPath","lineCap","strokeStyle","moveTo","lineTo","stroke","pos","clearRect","borrar","dibujandoSocket","borrandoSocket","param","ref","App","verifyUser","Provider","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3b4b54f9.chunk.js","sourcesContent":["import React, { useEffect, useState, useContext } from 'react'\r\nimport io from 'socket.io-client'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { UserContext } from '../../UserContext'\r\nimport RoomList from './RoomList'\r\n\r\nlet socket\r\n\r\nconst Home = () => {\r\n    const ENDPOINT = 'https://blackboard-application.herokuapp.com/'\r\n    const { user, setUser } = useContext(UserContext)\r\n    const [ room, setRoom ] = useState('')\r\n    const [ rooms, setRooms ] = useState([])\r\n    const [ roomError, setRoomError ] = useState('')\r\n\r\n    useEffect(() => {\r\n        socket = io(ENDPOINT)\r\n        return () => {\r\n            socket.emit('disconnect')\r\n            socket.off()\r\n        }\r\n    }, [ENDPOINT])\r\n\r\n    useEffect(()=>{\r\n        socket.on('output-rooms', rooms => {\r\n            setRooms(rooms)\r\n        })\r\n    }, [])\r\n    useEffect(() => {\r\n        socket.on('room-created', room => {\r\n            setRooms([...rooms, room])\r\n        })\r\n    }, [rooms])\r\n\r\n    useEffect(()=>{\r\n        socket.on('error-room-exist', err => {\r\n            setRoomError('this room already exist')\r\n        })\r\n    })\r\n\r\n    const createRoom = e => {\r\n        e.preventDefault()\r\n        socket.emit('create-room', room)\r\n        setRoom('')\r\n    }\r\n\r\n    if(!user){\r\n        return <Redirect to=\"/login\" />\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"jumbotron home-container mx-auto\">\r\n                <div className=\"row justify-content-between mx-auto w-100\">\r\n                    <div className=\"col-12 form-container mx-auto\">\r\n                        <div className=\"row content-rooms\">\r\n                            <div className=\"col-8\">\r\n                                <p className=\"saludo-usuario text-center\">{`Hola, ${user.name}`}</p>\r\n                                <form className=\"form-container form-room\" onSubmit={createRoom}>\r\n                                    <input className=\"room-input\" onChange={ e => { setRoom(e.target.value) }} onFocus={() => setRoomError('')} required type=\"text\" placeholder=\"Create Room\" value={room} />\r\n                                    <button className=\"create-btn btn btn-secondary\"  type=\"submit\">Create a room</button>\r\n                                    <span className=\"error-room\">{roomError}</span>\r\n                                </form>\r\n                            </div>\r\n\r\n                            <div className=\"col-4 room-list\">\r\n                                <h6>Room List</h6>\r\n                                <RoomList rooms={rooms}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","import React, { useRef, useEffect, useState, useContext } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport io from 'socket.io-client'\r\nimport ColorPalette from './ColorPalette'\r\nimport { UserContext } from '../../UserContext'\r\n\r\nlet socket\r\n\r\nconst Blackboard = () => {\r\n    const ENDPOINT = 'https://blackboard-application.herokuapp.com/'\r\n    const borradorRef = useRef(null)\r\n    const penRef = useRef(null)\r\n    // const [ color, setColor ] = useState('#000000')\r\n    let color = '#000000'\r\n    const canvasRef = useRef(null)\r\n    const { user, setUser } = useContext(UserContext)\r\n    let { room_id, room_name } = useParams()\r\n    socket = io(ENDPOINT)\r\n\r\n    const getColor = (param) => {\r\n        // setColor(param)\r\n        color = param\r\n        console.log('color value ', color)\r\n    }\r\n\r\n    useEffect(() =>{\r\n        const canv = canvasRef.current\r\n        const ctx = canv.getContext('2d')\r\n        canv.width = window.innerWidth\r\n        canv.height = window.innerHeight\r\n        let dibujando = false\r\n        let borrando = false\r\n        let pen = true\r\n        let borrador = false\r\n        \r\n        socket.emit('join', {name: user.name, room_id, user_id:user._id, room_name})\r\n\r\n        let coordenadas = {\r\n            x: 0,\r\n            y: 0\r\n        }\r\n        let oldCoord = {\r\n            x: 0,\r\n            y: 0\r\n        }\r\n        ctx.lineWidth = 1\r\n\r\n        function obtenerPosicion(e){\r\n            let rect = canv.getBoundingClientRect()\r\n            coordenadas.x = (e.clientX - rect.left)\r\n            coordenadas.y = (e.clientY - rect.top)\r\n            return coordenadas\r\n        }\r\n\r\n        borradorRef.current.addEventListener('click', event => {\r\n            borrador = true\r\n            pen = false\r\n        }, false)\r\n\r\n        penRef.current.addEventListener('click', event => {\r\n            borrador = false\r\n            pen = true\r\n        }, false)\r\n\r\n        canv.addEventListener('mousedown', event => {\r\n            if(pen){\r\n                dibujando = true\r\n            } else if(borrador){\r\n                borrando = true\r\n            }\r\n            obtenerPosicion(event)\r\n        })\r\n\r\n        canv.addEventListener('mouseup', () => {\r\n            borrando = false\r\n            dibujando = false\r\n        })\r\n\r\n        canv.addEventListener('mousemove', e => {\r\n            if(pen && dibujando){\r\n                dibujar(e)\r\n            } else if(borrador && borrando){\r\n                borrar(e)\r\n            }\r\n        }, false)\r\n\r\n        function dibujar(event){\r\n            ctx.beginPath()\r\n            ctx.lineCap = 'round'\r\n            ctx.strokeStyle = !color ? '#000000' : color\r\n            ctx.moveTo(coordenadas.x, coordenadas.y)\r\n\r\n            oldCoord.x = coordenadas.x\r\n            oldCoord.y = coordenadas.y\r\n\r\n            obtenerPosicion(event)\r\n\r\n            socket.emit('dibujando-socket', {oldCoord, coordenadas, room_id, color})\r\n            \r\n            ctx.lineTo(coordenadas.x , coordenadas.y)\r\n            ctx.stroke()\r\n        }\r\n\r\n        function borrar(e){\r\n            let pos = obtenerPosicion(e)\r\n            socket.emit('borrando', {pos, room_id})\r\n            ctx.clearRect(pos.x - 50, pos.y - 50, 100, 100)\r\n        }\r\n\r\n        function borrandoSocket(data){\r\n            ctx.clearRect(data.pos.x - 50, data.pos.y - 50, 100, 100)\r\n        }\r\n\r\n        function dibujandoSocket(data){\r\n            ctx.beginPath()\r\n            ctx.lineCap = 'round'\r\n            ctx.strokeStyle = !data.color ? '#000000' : data.color\r\n            ctx.moveTo(data.oldCoord.x, data.oldCoord.y)\r\n            ctx.lineTo(data.coordenadas.x, data.coordenadas.y)\r\n            ctx.stroke()\r\n        }\r\n\r\n        socket.on('dibujando-socket', data => {\r\n            dibujandoSocket(data)\r\n        })\r\n\r\n        socket.on('borrando', data => {\r\n            borrandoSocket(data)\r\n        })\r\n\r\n        socket.on('change-color', data => {\r\n            color = data\r\n        })\r\n    }, [])\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row jumbotron\">\r\n                <ColorPalette getColor={getColor} user={socket}/>\r\n                <div className=\"col-6\">\r\n                    <span id=\"borrador\" ref={borradorRef}>\r\n                        <i className=\"bi bi-eraser\"></i>\r\n                    </span>\r\n                    <span id=\"pen\" ref={penRef}>\r\n                        <i className=\"bi bi-pencil\"></i>\r\n                    </span>\r\n                </div>\r\n                <canvas className=\"col-12\" id=\"canvas\" ref={canvasRef}>\r\n                    Tu navegador no es compatible\r\n                </canvas>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Blackboard\r\n","import { createContext } from 'react'\r\nexport const UserContext = createContext(null)","import React from 'react'\r\n\r\nconst Room = ({name}) => {\r\n    return (\r\n        <div className=\"card horizontal\">\r\n            <div className=\"card-stacked\">\r\n                <div className=\"card-content\">\r\n                    <p>{name}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Room","import React from 'react'\r\nimport Room from './Room'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst RoomList = ({rooms}) => {\r\n    return (\r\n        <div>\r\n            {rooms && rooms.map(room => (\r\n                <Link key={room._id} to={`/room/${room._id}/${room.name}`}>\r\n                    <Room name={room.name} />\r\n                </Link>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RoomList","import React, { useContext } from 'react'\r\nimport { UserContext } from '../../UserContext';\r\n\r\nconst Navbar = () => {\r\n\r\n    const { user, setUser } = useContext(UserContext)\r\n\r\n    const logout = async () => {\r\n        try {\r\n            const res = await fetch('https://blackboard-application.herokuapp.com/logout', {\r\n                credentials: 'include',\r\n            });\r\n            const data = res.json();\r\n            console.log('logout data', data);\r\n            setUser(null)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light\">\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"/\">Blackboard</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarScroll\" aria-controls=\"navbarScroll\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"d-flex\" id=\"navbarScroll\">\r\n                    <ul className=\"navbar-nav me-auto my-2 my-lg-0 navbar-nav-scroll\">\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link active\" aria-current=\"page\" href=\"/login\"> Login  </a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link active\" href=\"#\" onClick={logout}>Logout</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link active\" href=\"/signup\"> Signup </a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React, { useState, useContext } from 'react'\r\nimport { UserContext } from '../../UserContext'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nconst Signup = () => {\r\n\r\n    const { user, setUser } = useContext(UserContext)\r\n    \r\n    const [ name, setName ] = useState('')\r\n    const [ email, setEmail ] = useState('')\r\n    const [ password, setPassword ] = useState('')\r\n    const [ nameError, setNameError ] = useState('')\r\n    const [ emailError, setEmailError ] = useState('')\r\n    const [ passwordError, setPasswordError ] = useState('')\r\n\r\n    const submitHandler = async e => {\r\n        e.preventDefault()\r\n        setNameError('')\r\n        setEmailError('')\r\n        setPasswordError('')\r\n\r\n        try{\r\n            const res = await fetch('https://blackboard-application.herokuapp.com/signup', {\r\n                method: 'POST',\r\n                credentials: 'include',\r\n                body: JSON.stringify({ name, email, password }),\r\n                headers: { 'Content-Type': 'application/json' }\r\n            })\r\n            const data = await res.json()\r\n            console.log(data)\r\n            if(data.errors){\r\n                setEmailError(data.errors.email)\r\n                setNameError(data.errors.name)\r\n                setPasswordError(data.errors.password)\r\n            }\r\n            if(data.user){\r\n                setUser(data.user)\r\n            }\r\n        } catch(err){\r\n            console.log(err)\r\n        }\r\n    }\r\n    if(user){\r\n        return <Redirect to=\"/\" />\r\n    }\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <h2>Signup</h2>\r\n                <form className=\"col col-12\" onSubmit={submitHandler}>\r\n                    <div className=\"mb-3\">\r\n                        <input id=\"name\" type=\"text\" className=\"validate form-control\" value={name} onChange={e => setName(e.target.value)} />\r\n                        <div className=\"name error red-text\">{nameError}</div>\r\n                        <label htmlFor=\"name\">Name</label>\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <input id=\"email\" type=\"email\" className=\"validate form-control\" value={email} onChange={e => setEmail(e.target.value)} />\r\n                        <div className=\"name error red-text\">{emailError}</div>\r\n                        <label htmlFor=\"email\">Email</label>\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <input id=\"password\" type=\"password\" className=\"validate form-control\" value={password} onChange={e => setPassword(e.target.value)} />\r\n                        <div className=\"name error red-text\">{passwordError}</div>\r\n                        <label htmlFor=\"password\">Password</label>\r\n                    </div>\r\n                    <button className=\"btn btn-primary\"> Sign up </button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup","import React, { useState, useContext } from 'react'\r\nimport { UserContext } from '../../UserContext'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nconst Login = () => {\r\n\r\n    const { user, setUser } = useContext(UserContext)\r\n\r\n    const [ email, setEmail ] = useState('')\r\n    const [ password, setPassword ] = useState('')\r\n    const [ emailError, setEmailError ] = useState('')\r\n    const [ passwordError, setPasswordError ] = useState('')\r\n\r\n    const submitHandler = async e => {\r\n        e.preventDefault()\r\n        setEmailError('')\r\n        setPasswordError('')\r\n\r\n        try{\r\n            const res = await fetch('https://blackboard-application.herokuapp.com/login', {\r\n                method: 'POST',\r\n                credentials: 'include',\r\n                body: JSON.stringify({ email, password }),\r\n                headers: { 'Content-Type': 'application/json' }\r\n            })\r\n            const data = await res.json()\r\n            console.log(data)\r\n            if(data.errors){\r\n                setEmailError(data.errors.email)\r\n                setPasswordError(data.errors.password)\r\n            }\r\n            if(data.user){\r\n                setUser(data.user)\r\n            }\r\n        } catch(err){\r\n            console.log(err)\r\n        }\r\n    }\r\n    if(user){\r\n        return <Redirect to=\"/\" />\r\n    }\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <h2>Login</h2>\r\n                <form className=\"col-12\" onSubmit={submitHandler}>\r\n                    <div className=\"mb-3\">\r\n                        <input id=\"email\" type=\"email\" className=\"validate form-control\" value={email} onChange={e => setEmail(e.target.value)} />\r\n                        <div className=\"name error red-text\">{emailError}</div>\r\n                        <label htmlFor=\"email\">Email</label>\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <input id=\"password\" type=\"password\" className=\"validate form-control\" value={password} onChange={e => setPassword(e.target.value)} />\r\n                        <div className=\"name error red-text\">{passwordError}</div>\r\n                        <label htmlFor=\"password\">Password</label>\r\n                    </div>\r\n                    <button className=\"btn btn-primary\"> Login </button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","import React from 'react'\r\n\r\nconst ColorPalette = ({getColor, user}) => {\r\n\r\n    const changeColorEvent = (color) => {\r\n        getColor(color)\r\n        user.emit('change-color', color)\r\n    }\r\n\r\n    return (\r\n        <div className={'paleta-colores'}>\r\n            <span id=\"red\" onClick={() => {\r\n                    getColor(\"#FF0000\")\r\n                    changeColorEvent(\"#FF0000\")\r\n                } \r\n            }></span>\r\n            <span id=\"blue\" onClick={() => {\r\n                    getColor(\"#0000FF\")\r\n                    changeColorEvent(\"#0000FF\")\r\n                }\r\n            }></span>\r\n            <span id=\"yellow\" onClick={() => {\r\n                    getColor(\"#FFFF00\")   \r\n                    changeColorEvent(\"#FFFF00\")\r\n                } \r\n            }></span>\r\n            <span id=\"green\" onClick={() => {\r\n                    getColor(\"#00FF00\")\r\n                    changeColorEvent(\"#00FF00\")\r\n                } \r\n            }></span>\r\n            <span id=\"black\" onClick={() => {\r\n                    getColor(\"#000000\")\r\n                    changeColorEvent(\"#000000\")\r\n                }\r\n            }></span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ColorPalette\r\n","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { UserContext } from './UserContext'\r\nimport Home from './components/home/Home'\r\nimport Navbar from './components/layout/Navbar'\r\nimport Signup from './components/auth/Signup'\r\nimport Login from './components/auth/Login'\r\nimport Blackboard from './components/blackboard/Blackboard'\r\nimport './styles/App.scss'\r\n\r\nfunction App() {\r\n\r\n  \tconst [ user, setUser ] = useState(null)\r\n\r\n\tuseEffect(() => {\r\n\t\tconst verifyUser = async () => {\r\n\t\t\ttry{\r\n\t\t\t\tconst res = await fetch('https://blackboard-application.herokuapp.com/verifyuser', {\r\n\t\t\t\t\tcredentials: 'include',\r\n\t\t\t\t\theaders: { 'Content-Type': 'application/json' }\r\n\t\t\t\t})\r\n\t\t\t\tconst data = await res.json()\r\n\t\t\t\tsetUser(data)\r\n\t\t\t} catch(error){\r\n\t\t\t\tconsole.log(error)\r\n\t\t\t}\r\n\t\t\r\n\t\t}\r\n\t\tverifyUser()\r\n\r\n\t})\r\n\r\n  \treturn (\r\n    \t<Router>\r\n      \t\t<div className=\"App\">\r\n        \t\t<UserContext.Provider value={{user, setUser}}>\r\n\t\t\t\t\t<Navbar />\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route exact path=\"/\" component={Home} />\r\n\t\t\t\t\t\t<Route path=\"/room/:room_id/:room_name\" component={Blackboard} />\r\n\t\t\t\t\t\t<Route path=\"/signup\" component={Signup} />\r\n\t\t\t\t\t\t<Route path=\"/login\" component={Login} />\r\n\t\t\t\t\t</Switch>\r\n        \t\t</UserContext.Provider>\r\n      \t\t</div>\r\n    \t</Router>\r\n  \t);\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}